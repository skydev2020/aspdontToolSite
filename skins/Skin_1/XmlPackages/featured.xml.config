<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Featured Products" debug="false">
	<query name="FeaturedProducts" rowElementName="FeaturedProduct">
		<sql>
			<![CDATA[ 
                
                --this is only for the comma delimited string of productids
                declare @FeaturedProducts varchar(500);
                set @FeaturedProducts = replace(@RawFeaturedProducts, ' ', '')

                declare @sql varchar(max);
                set @sql = 'select top ('+ cast(@NumberOfItems as varchar(50)) +') NEWID() AS ProductOrdering, p.ProductID, p.Name, p.SEName, p.Summary, p.ExtensionData, p.HidePriceUntilCart, pv.Price, pv.SalePrice, pv.Points, pv.VariantID, sp.name as SalesPromptName, pv.msrp '
                        +'from product p '
                        +'inner join productvariant pv on (pv.productid = p.productid and pv.isdefault = 1) ' +
                        --join on an entity if an entity type was specified
                        (case
	                        when (@FeaturedEntityType = 'category' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productcategory pe on (p.productid = pe.productid and pe.categoryid = ' + cast(@FeaturedEntityID as varchar(10)) + ') '
	                        when (@FeaturedEntityType = 'section' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productsection pe on (p.productid = pe.productid and pe.sectionid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'manufacturer' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productmanufacturer pe on (p.productid = pe.productid and pe.manufacturerid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'vector' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productvector pe on (p.productid = pe.productid and pe.vectorid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'genre' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productgenre pe on (p.productid = pe.productid and pe.genreid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        else
		                        ''
                        end)
                        +
                        --join to product store if product filtering is on
                        (case
	                        when @FilterProduct = 'true' then 
		                        'inner join productstore ps on (p.productid = ps.productid and ps.storeid = ' + cast(@StoreID as varchar(10))  + ') '
	                        else
		                        ''
                        end)
                        
                        +'inner join salesprompt sp on (p.salespromptid = sp.salespromptid) '+
                        --join on the comma delimited list if there is one
                        (case
	                        when @UseCommaDelimitedProductList = 'true' then 
		                        'inner join dbo.split(''' + @FeaturedProducts + ''', '','') fp on p.productid = cast(fp.items as int) '
	                        else
		                        ''
                        end)
                		
                        +'where p.published = 1 '
                        +'and p.deleted = 0 '
                        +'and pv.published = 1 '
                        +'and pv.deleted = 0 '
                        +'and pv.inventory >= ' + cast(@MinInventoryLevel as varchar(10)) + ' '
                        +'and pv.inventory >= ' + cast(@InvFilter as varchar(3)) + ' '+
                        
                        (case
	                        when @RandomOrder = 'true' then 
		                        'order by ProductOrdering '
	                        else
		                        ''
                        end)
                		
                		
                		
                exec(@sql);
			]]>
		</sql>
		<queryparam paramname="@UseCommaDelimitedProductList" paramtype="runtime" requestparamname="usecommadelimitedproductlist" sqlDataType="varchar" defvalue="false"  validationpattern="" />
		<queryparam paramname="@RawFeaturedProducts" paramtype="runtime" requestparamname="commadelimitedproductlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
		<queryparam paramname="@FeaturedEntityType" paramtype="runtime" requestparamname="featuredentitytype" sqlDataType="varchar" defvalue="category"  validationpattern="" />
		<queryparam paramname="@FeaturedEntityID"   paramtype="runtime" requestparamname="featuredentityid"    sqlDataType="int"     defvalue="0"      validationpattern="" />
		<queryparam paramname="@InvFilter"   paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel"    sqlDataType="int"     defvalue="0"      validationpattern="" />
		<queryparam paramname="@MinInventoryLevel"   paramtype="runtime" requestparamname="mininventorylevel"    sqlDataType="int"     defvalue="1"      validationpattern="" />
		<queryparam paramname="@NumberOfItems"   paramtype="runtime" requestparamname="numberofitems"    sqlDataType="int"     defvalue="4"      validationpattern="" />
		<queryparam paramname="@RandomOrder"   paramtype="runtime" requestparamname="randomorder"    sqlDataType="varchar"     defvalue="false"      validationpattern="" />
		<queryparam paramname="@StoreID"	      paramtype="runtime" requestparamname="StoreID"							sqlDataType="int"	    defvalue="1"      validationpattern="" />
		<queryparam paramname="@FilterProduct"  paramtype="runtime" requestparamname="FilterProduct"				sqlDataType="varchar"	    defvalue="False"      validationpattern="" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />
			<xsl:param name="Columns">
				<xsl:choose>
					<xsl:when test="/root/Runtime/columns != ''">
						<xsl:value-of select="number(/root/Runtime/columns)"/>
					</xsl:when>
					<xsl:otherwise>4</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowPrice">
				<xsl:choose>
					<xsl:when test="/root/Runtime/showprice = 'true'">
						<xsl:text>true</xsl:text>
					</xsl:when>
					<xsl:otherwise>false</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowCartForm">
				<xsl:choose>
					<xsl:when test="/root/Runtime/showcartform = 'true'">
						<xsl:text>true</xsl:text>
					</xsl:when>
					<xsl:otherwise>false</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
      <xsl:param name="ShowSummary">
        <xsl:choose>
          <xsl:when test="/root/Runtime/showsummary = 'true'">
            <xsl:text>true</xsl:text>
          </xsl:when>
          <xsl:otherwise>false</xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="ImageSize">
        <xsl:choose>
          <xsl:when test="/root/Runtime/imagesize = 'small'">
            <xsl:text>icon</xsl:text>
          </xsl:when>
          <xsl:when test="/root/Runtime/imagesize = 'medium'">
            <xsl:text>medium</xsl:text>
          </xsl:when>
          <xsl:otherwise>icon</xsl:otherwise>
        </xsl:choose>
      </xsl:param>
			<xsl:param name="Header">
				<xsl:value-of select="/root/Runtime/headertext" disable-output-escaping="yes" />
			</xsl:param>
			<xsl:variable name="ProductIdsOnPage">
				<xsl:for-each select="/root/FeaturedProducts/FeaturedProduct/ProductID">
					<xsl:value-of select="." />
					<xsl:if test="position() != last()">
						<xsl:text>,</xsl:text>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />

			<xsl:template match="/">

				<xsl:if test="count(/root/FeaturedProducts/FeaturedProduct) &gt; 0 ">
					<div class="featured-products">
						<div class="home-heading featured-products-header">
							<xsl:value-of select="$Header" disable-output-escaping="yes" />
						</div>
						<div class="row featured-product-row">
							<xsl:apply-templates select="/root/FeaturedProducts/FeaturedProduct" />
						</div>
					</div>
				</xsl:if>
			</xsl:template>

			<xsl:template match="FeaturedProduct">
				<xsl:param name="SalePrice">
					<xsl:choose>
						<xsl:when test="SalePrice=''">
							0
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="SalePrice" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:param>
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="ProductID" select="ProductID" />
				<xsl:variable name="productId" select="ProductID" />
				<xsl:variable name="IsRecurring" select="HasRecurring" />
				<xsl:variable name="ProductLink" select="aspdnsf:ProductLink(ProductID, SEName, 0)" />
				<xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', $ImageSize, 0)" />
				<xsl:variable name="GridItemCSSClassName">
					<xsl:choose>
						<xsl:when test="$Columns = 1">col-xs-12</xsl:when>
						<xsl:when test="$Columns = 2">col-sm-6</xsl:when>
						<xsl:when test="$Columns = 3">col-sm-6 col-md-4</xsl:when>
						<xsl:when test="$Columns = 4">col-sm-6 col-md-3</xsl:when>
						<xsl:when test="$Columns = 5">col-sm-6 col-md-2</xsl:when>
						<xsl:when test="$Columns = 6">col-sm-6 col-md-4 col-lg-1</xsl:when>
						<xsl:otherwise>one-fourth</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				
				<xsl:if test="position() mod $Columns = 1 and position() &gt; 1">
					<xsl:variable name="NewRowHtml">
						<xsl:text>&lt;/div&gt;&lt;div class="row featured-product-row"&gt;</xsl:text>
					</xsl:variable>
					<xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
				</xsl:if>

				<div class="featured-item grid-item {$GridItemCSSClassName}">
					<div class="featured-shadow-box featured-prouducts-inner">
						<div class="promo-wrapper">
							<xsl:variable name="promoDescription" select="$AvailablePromotions/Promotion/Description"/>
							<xsl:if test="string-length($AvailablePromotions) &gt; 0">
								<a href="{$ProductLink}">
									<xsl:attribute name="title">
										<xsl:value-of select="$promoDescription" disable-output-escaping="yes"/>
									</xsl:attribute>
									<xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
								</a>
							</xsl:if>
						</div>

						<div class="featured-item-image-wrap grid-item-image-wrap">
							<a href="{$ProductLink}">
								<img src="{$ImageUrl}" alt="{$AltText}" class="img-responsive center-block featured-item-image" />
							</a>
						</div>

						<div class="grid-item-name-wrap featured-product-name-wrap">
							<a href="{$ProductLink}">
								<xsl:value-of select="$Name" disable-output-escaping="yes" />
							</a>
						</div>
				
						<div class="grid-summary-wrapper">
								<xsl:if test="$ShowSummary = 'true'">
										<span class="featured-product-summary">
												<xsl:value-of select="aspdnsf:GetMLValue(Summary)" disable-output-escaping="yes"/>
										</span>
								</xsl:if>
						</div>

						<xsl:if test="$ShowPrice = 'true'" >
							<div class="featuredPriceWrap">
								<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, $SalePrice, 0, Points, $SalesPromptName)" disable-output-escaping="yes"/>
							</div>
						</xsl:if>

						<xsl:if test="$ShowCartForm = 'true'" >
							<div class="featuredCartWrap">
								<xsl:value-of select="aspdnsf:XmlPackage('simpleaddtocartform.xml.config', concat('productid=', ProductID))" disable-output-escaping="yes"/>
							</div>
						</xsl:if>

					</div>
				</div>
				<xsl:if test="position() mod 2 = 0">
					<div class="clearfix visible-sm featured-item-extra-small-clear"></div>
				</xsl:if>

			</xsl:template>

			
			<xsl:template match="Promotion">
				<xsl:variable name="promoCode" select="Code" />
				<div id="promo-code">
					<xsl:attribute name="class">
						<xsl:value-of select="$promoCode" disable-output-escaping="yes"/>
					</xsl:attribute>
					<xsl:value-of select="CallToAction" disable-output-escaping="yes"/>
				</div>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
