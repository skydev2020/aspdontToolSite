<?xml version="1.0" standalone="yes" ?>
<!-- ###################################################################################################### -->
<!-- Copyright AspDotNetStorefront.com, 1995-2011.  All Rights Reserved.					                -->
<!-- http://www.aspdotnetstorefront.com														                -->
<!-- For details on this license please visit  the product homepage at the URL above.		                -->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
<!-- ###################################################################################################### -->
<package version="2.1" displayname="Mega Menu Drop Down" debug="false" includeentityhelper="true">
	<PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	  xmlns:msxsl="urn:schemas-microsoft-com:xslt"
	  xmlns:aspdnsf="urn:aspdnsf"
	  exclude-result-prefixes="aspdnsf msxsl">
			<xsl:output method="html" omit-xml-declaration="yes"/>

			<xsl:param name="EntityID">
				<xsl:choose>
					<xsl:when test="/root/Runtime/entityid &gt; 0">
						<xsl:value-of select="/root/Runtime/entityid" disable-output-escaping="yes" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="EntityType" select="aspdnsf:StrCapitalize(/root/Runtime/entityname)" />
			<!-- the following line will cover the root level node, and non root level nodes. -->
			<xsl:param name="TopEntityNode" select="/root/EntityHelpers/*[name() = $EntityType]//Entity[EntityID = $EntityID and $EntityID &gt; 0]  | /root/EntityHelpers/*[name() = $EntityType and $EntityID = 0]" />
			<xsl:param name="NumberOfColumns">
				<xsl:choose>
					<xsl:when test="/root/Runtime/columns &gt; 0">
						<xsl:value-of select="/root/Runtime/columns" disable-output-escaping="yes" />
					</xsl:when>
					<xsl:otherwise>1</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="EntityCount" select="count($TopEntityNode/Entity)" />
  
			<xsl:param name="NumberOfLinksToShow">
				<xsl:choose>
					<xsl:when test="/root/Runtime/numberoflinkstoshow &lt; $EntityCount">
						<xsl:value-of select="/root/Runtime/numberoflinkstoshow" disable-output-escaping="yes" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$EntityCount" disable-output-escaping="yes" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ListSize" select="ceiling($NumberOfLinksToShow div $NumberOfColumns)" />
      <xsl:param name="dropdownClass">
        <xsl:choose>
             <xsl:when test="$NumberOfColumns = 2">
              <xsl:text>ymm-content two-column-menu</xsl:text>
            </xsl:when>
            <xsl:when test="$NumberOfColumns = 3">
              <xsl:text>ymm-content three-column-menu</xsl:text>
            </xsl:when>
			   <xsl:when test="$NumberOfColumns = 4">
              <xsl:text>ymm-content four-column-menu</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>ymm-content</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
		 
      </xsl:param>
      <xsl:param name="columnClass">
         <xsl:choose>
			
             <xsl:when test="$NumberOfColumns = 2">
              <xsl:text>col-sm-12 col-md-6 menu-list</xsl:text>
            </xsl:when>
            <xsl:when test="$NumberOfColumns = 3">
              <xsl:text>col-xs-12 col-md-4 menu-list</xsl:text>
            </xsl:when>
			<xsl:when test="$NumberOfColumns = 4">
              <xsl:text>col-sm-12 col-md-3 menu-list</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>col-xs-12 menu-list</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
      </xsl:param>

			<xsl:template match="/">
        <div>
           <xsl:attribute name="class"><xsl:value-of select="$dropdownClass"></xsl:value-of></xsl:attribute>
						<div class="row">
				        <ul>
                    <xsl:attribute name="class"><xsl:value-of select="$columnClass"></xsl:value-of></xsl:attribute>
					          <xsl:apply-templates select="$TopEntityNode/Entity" />
				        </ul>
                <div class="clearfix"></div>
            </div>
        </div>
			</xsl:template>

			<xsl:template match="Entity">
				<xsl:param name="NewColumn" select="concat('&lt;/ul&gt; &lt;ul class=&#34;', $columnClass, '&#34; &gt;')" />
				<xsl:if test="position() &lt;= ($NumberOfLinksToShow)">
					<xsl:if test="(position() > 1 and position() mod $ListSize = 1) or ($ListSize = 1)">
						<xsl:value-of select="$NewColumn" disable-output-escaping="yes" />
					</xsl:if>
					<li class="menu-list-item">
						<a href="{aspdnsf:EntityLink(EntityID, SEName, $EntityType, 0)}">
							<xsl:value-of select="aspdnsf:GetMLValue(Name)"/>
						</a>
					</li>
					<!--if this is the last item, and there are more items to show, and we have a true parent category show view all link-->
					<xsl:variable name="IsLast" select="position() = $NumberOfLinksToShow" />
					<xsl:variable name="TheresMore" select="$EntityCount > $NumberOfLinksToShow" />
          <xsl:variable name="PackageInfo">
            <param name="EntityType" value="{$EntityType}" />
          </xsl:variable>

         
					<xsl:if test="$IsLast and $TheresMore">
						<li class="subNavItem viewAllItem">
              <xsl:choose>
                <xsl:when test="$EntityType = 'Manufacturer'">
                    <a href="e-manufacturerlist.aspx">View All</a>
                </xsl:when>
                <xsl:otherwise>
                  <a href="{aspdnsf:BuildRoute('index', 'entity', msxsl:node-set($PackageInfo))}">View All</a>
                </xsl:otherwise>
              </xsl:choose>
						</li>
					</xsl:if>
        
				</xsl:if>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>