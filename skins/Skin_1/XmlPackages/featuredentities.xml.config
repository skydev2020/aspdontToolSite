<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Featured Entities" debug="false">
	<query name="FeaturedEntities" rowElementName="FeaturedEntity">
		<sql>
			<![CDATA[ 
                
                --this is only for the comma delimited string of entityids
                declare @FeaturedEntities varchar(500);
                set @FeaturedEntities = replace(@CSVEntityList, ' ', '')

                declare @sql varchar(max);

                set @sql = 'select top ('+ cast(@NumberOfItems as varchar(50)) +') NEWID() As EntityOrdering, '
						+@FeaturedEntityType+'Id As EntityID, Name, SEName, SEAltText, '
						+''''+@FeaturedEntityType+''''+ ' As FeaturedEntityType'
						
						+' from '+ @FeaturedEntityType + ' ' +
                        --join to Entity store if Entity filtering is on
						(case
	                        when (@FeaturedEntityType = 'category') then 
								(case
									when @FilterByEntity = 'true' then 
										'inner join EntityStore es on (category.categoryid = es.entityid and es.storeid = ' + cast(@StoreID as varchar(10))  + ') '
									else
										''
								end)
	                        when (@FeaturedEntityType = 'section') then 
								(case
									when @FilterByEntity = 'true' then 
										'inner join EntityStore es on (section.sectionid = es.entityid and es.storeid = ' + cast(@StoreID as varchar(10))  + ') '
									else
										''
								end)	                        
							when (@FeaturedEntityType = 'manufacturer') then 
								(case
									when @FilterByEntity = 'true' then 
										'inner join EntityStore es on (manufacturer.manufacturerid = es.entityid and es.storeid = ' + cast(@StoreID as varchar(10))  + ') '
									else
										''
								end)
							when (@FeaturedEntityType = 'vector') then 
								(case
									when @FilterByEntity = 'true' then 
										'inner join EntityStore es on (vector.vectorid = es.entityid and es.storeid = ' + cast(@StoreID as varchar(10))  + ') '
									else
										''
								end)	                        
							when (@FeaturedEntityType = 'genre') then 
								'inner join EntityStore es on (genre.genreid = es.entityid and es.storeid = ' + cast(@StoreID as varchar(10))  + ') '
	                        else
		                        ''
                        end)
                        +
						--join on the comma delimited list if there is one
                        (case
	                        when @UseCommaDelimitedEntityList = 'true' then 
		                        'inner join (select row_number() OVER (ORDER BY (SELECT 0)) as RowNum, items from dbo.split(''' + @FeaturedEntities + ''', '','')) fp on '+ @FeaturedEntityType+'.'+ @FeaturedEntityType+'id = cast(fp.items as int) '
	                        else
		                        ''
                        end)
                                        		
                        +'where '+ @FeaturedEntityType+'.published = 1 '
                        +'and '+ @FeaturedEntityType+'.deleted = 0 '
						+
                        
                        (case
	                        when @RandomOrder = 'true' then 
		                        'order by EntityOrdering '
	                        else
		                        'order by RowNum '
                        end)
                		
                		PRINT @sql
                		
                exec(@sql);
			]]>
		</sql>
		<queryparam paramname="@UseCommaDelimitedEntityList" paramtype="runtime" requestparamname="usecommadelimitedentitylist" sqlDataType="varchar" defvalue="false"  validationpattern="" />
		<queryparam paramname="@CSVEntityList"		 paramtype="runtime" requestparamname="commadelimitedentitylist" sqlDataType="varchar" defvalue=""  validationpattern="" />
		<queryparam paramname="@FeaturedEntityType"			 paramtype="runtime" requestparamname="featuredentitytype" sqlDataType="varchar" defvalue="category"  validationpattern="" />
		<queryparam paramname="@FeaturedEntityID"			 paramtype="runtime" requestparamname="featuredentityid"    sqlDataType="int"     defvalue="0"      validationpattern="" />
		<queryparam paramname="@NumberOfItems"				 paramtype="runtime" requestparamname="numberofitems"    sqlDataType="int"     defvalue="4"      validationpattern="" />
		<queryparam paramname="@RandomOrder"				 paramtype="runtime" requestparamname="randomorder"    sqlDataType="varchar"     defvalue="false"      validationpattern="" />
		<queryparam paramname="@StoreID"					 paramtype="runtime" requestparamname="StoreID"							sqlDataType="int"	    defvalue="1"      validationpattern="" />
		<queryparam paramname="@FilterByEntity"				 paramtype="runtime" requestparamname="FilterByEntity"				sqlDataType="varchar"	    defvalue="false"      validationpattern="" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />

			<xsl:param name="Columns">
				<xsl:choose>
					<xsl:when test="/root/Runtime/columns != ''">
						<xsl:value-of select="number(/root/Runtime/columns)"/>
					</xsl:when>
					<xsl:otherwise>4</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:param name="Header">
				<xsl:value-of select="/root/Runtime/headertext" disable-output-escaping="yes" />
			</xsl:param>
      
      <xsl:param name="EntityType" select="/root/Runtime/featuredentitytype" />
      
			<xsl:variable name="CSSClass">
				<xsl:value-of select="/root/Runtime/cssclass" disable-output-escaping="yes" />
			</xsl:variable>

			<xsl:variable name="ImageSize">
				<xsl:choose>
					<xsl:when test="string-length(/root/Runtime/imagesize) &gt; 0">
						<xsl:value-of select="/root/Runtime/imagesize" disable-output-escaping="yes" />
					</xsl:when>
					<xsl:otherwise>medium</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>

			<xsl:variable name="NumberOfItems">
				<xsl:value-of select="/root/Runtime/numberofitems" disable-output-escaping="yes" />
			</xsl:variable>
      
     
      
			<xsl:template match="/">
				<xsl:if test="count(/root/FeaturedEntities/FeaturedEntity) &gt; 0 ">
					<div class="featured-entities {$CSSClass}">
						<xsl:if test="string-length($Header) &gt; 0">
							<div class="home-heading featured-entities-header">
								<xsl:value-of select="$Header" disable-output-escaping="yes" />
							</div>
						</xsl:if>
						<div class="row featured-entity-row">
							<xsl:apply-templates select="/root/FeaturedEntities/FeaturedEntity" />
						</div>
            <xsl:choose>
              <xsl:when test="$EntityType = 'manufacturer'">
                <div class="text-center bottom-root-link">
                  <a href="manufacturers.aspx" class="button view-all-entities">View all Â»</a>
                </div>
              </xsl:when>
              <xsl:otherwise></xsl:otherwise>
            </xsl:choose>
    
					</div>
				</xsl:if>
			</xsl:template>

			<xsl:template match="FeaturedEntity">
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="EntityID" select="EntityID" />
        <xsl:variable name="EntityType" select="FeaturedEntityType" />
				<xsl:variable name="IsRecurring" select="HasRecurring" />
				<xsl:variable name="EntityLink" select="aspdnsf:EntityLink($EntityID, SEName, $EntityType, 0)" />
				<xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl($EntityID, $EntityType, $ImageSize, 0)" />

				<xsl:variable name="GridItemCSSClassName">
					<xsl:choose>
						<xsl:when test="$Columns = 1 and $ImageSize = 'medium'">col-xs-12</xsl:when>
						<xsl:when test="$Columns = 2 and $ImageSize = 'medium'">col-sm-6</xsl:when>
						<xsl:when test="$Columns = 3 and $ImageSize = 'medium'">col-sm-6 col-md-4</xsl:when>
						<xsl:when test="$Columns = 4 and $ImageSize = 'medium'">col-sm-6 col-md-3</xsl:when>
						<xsl:when test="$Columns = 5 and $ImageSize = 'medium'">col-sm-6 col-md-2</xsl:when>
						<xsl:when test="$Columns = 6 and $ImageSize = 'medium'">col-sm-6 col-md-2</xsl:when>
						<xsl:when test="$Columns = 1 and $ImageSize = 'icon'">col-xs-12</xsl:when>
						<xsl:when test="$Columns = 2 and $ImageSize = 'icon'">col-sm-6</xsl:when>
						<xsl:when test="$Columns = 3 and $ImageSize = 'icon'">col-sm-2 col-md-4</xsl:when>
						<xsl:when test="$Columns = 4 and $ImageSize = 'icon'">col-sm-2 col-md-3</xsl:when>
						<xsl:when test="$Columns = 5 and $ImageSize = 'icon'">col-sm-2</xsl:when>
						<xsl:when test="$Columns = 6 and $ImageSize = 'icon'">col-sm-2</xsl:when>
						<xsl:otherwise>one-fourth</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>

				<xsl:if test="position() mod $Columns = 1 and position() &gt; 1">
					<xsl:variable name="NewRowHtml">
						<!--close first row, start new row-->
						<xsl:text>&lt;/div&gt;&lt;div class="row featured-entity-row"&gt;</xsl:text>
					</xsl:variable>
					<xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
				</xsl:if>

				<div class="featured-item grid-item {$GridItemCSSClassName}">
					<div class="featured-shadow-box featured-entity-inner">

						<div class="grid-item-name-wrap featured-entity-name-wrap">
							<a href="{$EntityLink}">
								<xsl:value-of select="$Name" disable-output-escaping="yes" />
							</a>
						</div>
						
						<div class="featured-item-image-wrap grid-item-image-wrap">
							<a href="{$EntityLink}">
								<span class="button featured-entities-shop-now">Shop Now</span>
								<img src="{$ImageUrl}?v=1.0" alt="{$AltText}" class="img-thumbnail img-responsive featured-item-image grid-item-image" />
							</a>
						</div>

					</div>
				</div>
				<xsl:if test="position() mod 2 = 0 and $ImageSize = 'medium'">
					<div class="clearfix visible-sm featured-item-extra-small-clear"></div>
				</xsl:if>

			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
