<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<!-- This XML package is designed for multi-variant products.  Variant options are listed in a dropdown, with a single add to cart form. -->
<!-- This package is not designed for truly responsive skins, however it uses a basic grid system that will make pages somewhat resizeable. -->
<package version="2.1" displayname="Responsive Variants in a List" debug="false" includeentityhelper="true">
  <query name="Products" rowElementName="Product">
    <sql>
      <![CDATA[
				exec dbo.aspdnsf_ProductInfo
					@ProductID = @ProductID,
					@CustomerLevelID = @CustomerLevelID,
					@DefaultVariantOnly = 1,
					@AffiliateID = @AffiliateID,
					@StoreID = @StoreID
      ]]>
    </sql>
    <queryparam paramname="@ProductID"				paramtype="request"	requestparamname="ProductID"				sqlDataType="int"	defvalue="0"	validationpattern="^\d{1,10}$" />
    <queryparam paramname="@CustomerLevelID"	paramtype="runtime"	requestparamname="CustomerLevelID"	sqlDataType="int"	defvalue="0"	validationpattern="" />
    <queryparam paramname="@AffiliateID"			paramtype="system"	requestparamname="AffiliateID"			sqlDataType="int"	defvalue="0"	validationpattern="" />
    <queryparam paramname="@StoreID"					paramtype="runtime"	requestparamname="StoreID"					sqlDataType="int"	defvalue="1"	validationpattern="" />
  </query>
  <query name="Variants" rowElementName="Variant">
    <sql>
      <![CDATA[
					SELECT pv.SEAltText
						 , pv.VariantID
						 , pv.ProductID
						 , pv.Description AS VariantDescription
						 , pv.name VariantName
						 , pv.skusuffix
						 , pv.Price
						 , ISNULL(pv.saleprice, 0) AS SalePrice 
						 , pv.CustomerEntersPrice
						 , ISNULL(pv.colors, '') AS Colors
						 , ISNULL(pv.sizes, '') AS Sizes
						 , pv.ImageFilenameOverride
						 , pv.GTIN
						 , pv.Condition
						 , pv.Dimensions
						 , pv.Weight
						 , ISNULL(pv.Points, 0) AS Points
						 , ISNULL(pv.ManufacturerPartNumber, '') AS VariantManufacturerPartNumber
						 , CASE WHEN pcl.productid IS NULL THEN 0 ELSE ISNULL(e.Price, 0) END ExtendedPrice
						 , p.TaxClassID
						 , p.HidePriceUntilCart
						 , p.Description
						 , ISNULL(p.ManufacturerPartNumber, '') AS ManufacturerPartNumber
					  FROM PRODUCTVARIANT pv WITH (NOLOCK)
					  JOIN PRODUCT p WITH (NOLOCK) ON pv.ProductID = p.ProductID
				 LEFT JOIN ExtendedPrice e WITH (NOLOCK) ON pv.VariantID=e.VariantID AND e.CustomerLevelID = @CustomerLevelID
				 LEFT JOIN ProductCustomerLevel pcl WITH (NOLOCK) ON p.ProductID = pcl.ProductID  AND pcl.CustomerLevelID = @CustomerLevelID
					 WHERE pv.ProductID = @ProductID AND pv.Published = 1 AND pv.Deleted = 0
				  ORDER BY pv.DisplayOrder, pv.Name
            ]]>
    </sql>
    <queryparam paramname="@ProductID"       paramtype="request" requestparamname="ProductID"       sqlDataType="int" defvalue="0"  validationpattern="^\d{1,10}$" />
    <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
    <queryparam paramname="@affiliateID"     paramtype="system"  requestparamname="AffiliateID"     sqlDataType="int" defvalue="0"  validationpattern="" />
  </query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />
      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="ShowFullNameInRightBar">
        <xsl:value-of select="aspdnsf:AppConfig('ShowFullNameInRightBar')" disable-output-escaping="yes" />
      </xsl:param>
      <xsl:variable name="DefaultVariantID">
				<xsl:choose>
					<xsl:when test="count(/root/Products/Product[isdefault = 1]) = 0">
						<xsl:value-of select="/root/Products/Product[1]/VariantID" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="/root/Products/Product[isdefault=1]/VariantID" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:param name="XmlPackageName" select="/root/System/XmlPackageName" />

			<xsl:param name="CatID">
				<xsl:choose>
					<xsl:when test="count(/root/QueryString/categoryid) &gt; 0">
						<xsl:value-of select="/root/QueryString/categoryid" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:variable name="ProductIdsOnPage">
				<xsl:for-each select="/root/Products/Product/ProductID">
					<xsl:value-of select="." />
					<xsl:if test="position() != last()">
						<xsl:text>,</xsl:text>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />
			<xsl:variable name="schemaProductURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/Product')"/>

			<!-- This is the main template for this package.  It runs once regardless of how this product is configured. -->
			<xsl:template match="/">

				<div class="page-wrap product-page dropdown-product-page" itemscope="" itemtype="{$schemaProductURL}">
					<xsl:apply-templates select="/root/Products/Product[isdefault = 1]" />
				</div>
			
			</xsl:template>

			<!-- Runs once for the parent product (default variant) -->
			<xsl:template match="Product">
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="Description" select="aspdnsf:GetMLValue(Description)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="productId" select="ProductID" />
        <xsl:variable name="RatingsEnabled" select="aspdnsf:AppConfigBool('RatingsEnabled')"/>
        <xsl:variable name="showRelated" select="/root/Products/Product/RelatedProducts"/>
        <xsl:variable name="extensionData1" select="ExtensionData"/>
				<xsl:variable name="ProductImage" select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'medium', 1, $AltText)"/>
				<xsl:variable name="pManufacturerName" select="aspdnsf:GetMLValue(ProductManufacturerName)"/>
				<xsl:variable name="productSKU" select="/root/Products/Product/SKU" />
				<xsl:variable name="schemaOrganizationURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/Organization')"/>
				<xsl:variable name="schemaProductLink" select="aspdnsf:ProductLink(ProductID, SEName, '0', '0', '0', '1')" />
        <xsl:variable name="pSalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
        <xsl:variable name="schemaOfferURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/Offer')"/>
        <xsl:variable name="schemaItemOfferedURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/itemOffered')"/>
        <xsl:variable name="stockStatusText" select="aspdnsf:GetStockStatusText(ProductID, VariantID, 'Product')" />
        <xsl:variable name="pManufacturerLink">
      
					<xsl:choose>
						<xsl:when test="string-length(ProductManufacturerId) &gt; 0 and string-length(ProductManufacturerSEName) &gt; 0">
							<xsl:value-of select="aspdnsf:ManufacturerLink(ProductManufacturerId, ProductManufacturerSEName, '0', '0', '1')" />
						</xsl:when>
					</xsl:choose>
				</xsl:variable>

				<xsl:choose>
					<xsl:when test="IsAKit=1">
						<div class="page-row">
							Display of Kit Products is not supported by this XmlPackage. XmlPackage=<xsl:value-of select="$XmlPackageName" />
						</div>
					</xsl:when>
					<xsl:otherwise>
						<xsl:if test="((string-length($pManufacturerName) &gt; 0) or (string-length($pManufacturerLink) &gt; 0))">
							<span itemprop="manufacturer" itemscope="" itemtype="{$schemaOrganizationURL}">
								<xsl:if test="string-length($pManufacturerName) &gt; 0">
									<meta itemprop="name" content="{$pManufacturerName}"/>
								</xsl:if>
								<xsl:if test="string-length($pManufacturerLink) &gt; 0">
									<meta itemprop="url" content="{$pManufacturerLink}"/>
								</xsl:if>
							</span>
						</xsl:if>
						<xsl:if test="string-length($schemaProductLink) &gt; 0">
							<meta itemprop="url" content="{$schemaProductLink}"/>
						</xsl:if>
            <div class="variant-list-page">
						<div class="product-page-top">
              <div class="row">
             
       
              <div class="clearfix"></div>
							<div class="product-image-column col-xs-12 col-sm-4">
								<xsl:value-of select="$ProductImage" disable-output-escaping="yes"/>
							</div>
							<div class="product-info-column col-xs-12 col-sm-8">
                <div class="product-info-wrap">
                  <h1 class="product-page-header" itemprop="name">
                    <xsl:value-of select="$Name" disable-output-escaping="yes" />
                  </h1>
                  <xsl:if test="string-length(Summary) > 0">
                    <div class="product-summary">
                      <xsl:value-of select="Summary" disable-output-escaping="yes"/>
                    </div>
                  </xsl:if>

                  <xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
            
                  <xsl:if test="count(/root/Variants/Variant) = 1">
                    <xsl:if test="number(CustomerEntersPrice)=0">
                      <div class="price-tag">
                        <!-- Add a dynamically-named div to the page that the add to cart form will look for to find the price -->
                        <div itemprop="offers" itemscope="" itemtype="{$schemaOfferURL}">
                          <xsl:attribute name="id">
                            VariantPrice_<xsl:value-of select="VariantID"/>
                          </xsl:attribute>
                          <xsl:if test="string-length($stockStatusText) &gt; 0">
                            <link itemprop="availability" href="{concat(aspdnsf:GetCurrentProtocol(), '://schema.org/', substring-before($stockStatusText, '|'))}" content="{substring-after($stockStatusText, '|')}"/>
                          </xsl:if>
                          <xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, TaxClassID)" disable-output-escaping="yes" />
                        </div>
                      </div>
                    </xsl:if>
                    <div class="add-to-cart-row">
                      <xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, VariantID, 1)" disable-output-escaping="yes"/>
                    </div>
                  </xsl:if>
                  <xsl:if test="count(/root/Variants/Variant) &gt; 1">
                    <div class="select-options-wrapper">
                      <a href="#variantList" class="button call-to-action">Select Options</a>
                    </div>
                  </xsl:if>
                  <xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID)" disable-output-escaping="yes" />
                  <div class="product-add-this">
										<xsl:value-of select="aspdnsf:Topic('0-product-add-this')" disable-output-escaping="yes"/>
									</div>
									<xsl:value-of select="aspdnsf:GetMultiVariantPayPalAd(ProductID)" disable-output-escaping="yes" />
								</div>
							</div>
              <div class="clearfix"></div>
              </div>
						</div>
           
            <xsl:if test="count(/root/Variants/Variant) &gt; 1">
              <div id="variantList"></div>
              <div class="variant-list-wrapper">
                <div class="variant-list-inner">
                  <xsl:apply-templates select="/root/Variants/Variant"></xsl:apply-templates>
                </div>
              </div>
            </xsl:if>
         
            <div class="row product-page-footer">
                <div>
                  <xsl:if test="string-length($showRelated) > 0">
                    <xsl:attribute name="class">col-sm-6</xsl:attribute>
                  </xsl:if>
                <div id="product-tab-wrapper" role="tabpanel">
                <ul id="product-tabs" class="nav nav-tabs" role="tablist">
                  <xsl:if test="$Description">
                    <li role="presentation">
                      <a href="#description" aria-controls="description" role="tab" data-toggle="tab">
                        <xsl:value-of select="aspdnsf:StringResource('product.tablabels.Description')" disable-output-escaping="yes"/>    
                      </a>
                    </li>
                  </xsl:if>

                  <li role="presentation">
                    <a href="#reviews" aria-controls="reviews" role="tab" data-toggle="tab">
                      <xsl:value-of select="aspdnsf:StringResource('product.tablabels.Reviews')" disable-output-escaping="yes"/>
                   </a>
                  </li>

                  <xsl:if test="string-length($extensionData1)">
                     <li role="presentation">
                      <a href="#extensionData1" aria-controls="extdata1" role="tab" data-toggle="tab">
                        <xsl:value-of select="aspdnsf:StringResource('product.tablabels.ExtensionData')" disable-output-escaping="yes"/>
                     </a>
                    </li>
                  </xsl:if>
                    
                  <xsl:if test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
                    <li role="presentation">
                      <a href="#sizeinfo" aria-controls="sizeinfo" role="tab" data-toggle="tab">
                        <xsl:value-of select="aspdnsf:StringResource('product.tablabels.InventoryTable')" disable-output-escaping="yes"/>
                    </a>
                    </li>
                  </xsl:if>
                </ul>

                <div id="tab-panels" class="tab-content">
                  <xsl:if test="$Description">
                    <div role="tabpanel" class="tab-pane fade" id="description">
                      <xsl:value-of select="$Description" disable-output-escaping="yes"/>
                    </div>
                  </xsl:if>

                  <div role="tabpanel" class="tab-pane fade" id="reviews">
                    <xsl:value-of select="aspdnsf:ProductRatings(ProductID, 0, 0, 0, 0)" disable-output-escaping="yes"/>
                  </div>

                   <xsl:if test="string-length($extensionData1)">
                     <div role="tabpanel" class="tab-pane" id="extensionData1">
                      <xsl:value-of select="$extensionData1" disable-output-escaping="yes"/>
                    </div>
                  </xsl:if>
                      
                  <xsl:if test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
                    <div role="tabpanel" class="tab-pane fade" id="sizeinfo">
                      <xsl:choose>
                        <!--  Showing of inventory table also goes through the rules of DisplayOutOfStock appconfig if enabled..-->
                        <xsl:when test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
                          <xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID, VariantID)" disable-output-escaping="yes" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
                            <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID, 'Product')" disable-output-escaping="yes" />
                          </xsl:if>
                        </xsl:otherwise>
                      </xsl:choose>
                    </div>
                  </xsl:if>
                </div>
              </div>
                <script type="text/javascript">
                  $('#product-tabs li:first').addClass('active');
                  $('#tab-panels div:first').addClass('fade active in');
                </script>
              </div>
                <xsl:if test="string-length($showRelated) > 0">
                  <div class="col-sm-6 related-products-wrap">
                    <xsl:value-of select="aspdnsf:RelatedProducts(ProductID)" disable-output-escaping="yes"/>
                  </div>
                  </xsl:if>
                <div class="clearfix"></div>
                <div class="col-xs-12 upsell-products-wrapper">
                  <xsl:value-of select="aspdnsf:ShowUpsellProducts(ProductID)" disable-output-escaping="yes"/>
                </div> 
                
              <div class="clearfix"></div>
              </div>
            </div>
					</xsl:otherwise>
				</xsl:choose>

			</xsl:template>

      <!-- Runs once for each variant, to fill in the grid item details -->
      <xsl:template match="Variant">
        <xsl:param name="pName" select="aspdnsf:GetMLValue(/root/Products/Product/Name)"></xsl:param>
        <xsl:param name="pSKU" select="/root/Products/Product/SKU"></xsl:param>
        <xsl:param name="HidePriceUntilCart" select="/root/Products/Product/HidePriceUntilCart"></xsl:param>
        <xsl:param name="vName" select="aspdnsf:GetMLValue(VariantName)"></xsl:param>
        <xsl:param name="vDescription" select="aspdnsf:GetMLValue(VariantDescription)"></xsl:param>
        <xsl:param name="pSalesPromptName" select="aspdnsf:GetMLValue(/root/Products/Product/SalesPromptName)"></xsl:param>
        <xsl:param name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:param>
        <xsl:param name="AltText">
          <xsl:choose>
            <xsl:when test="$pSEAltText='' and $vName!=''">
              <xsl:value-of select="$vName" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$pSEAltText" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        <xsl:variable name="fullName" select="concat($pName, ' ', $vName)" />
        <xsl:variable name="schemaOfferURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/Offer')"/>
        <xsl:variable name="schemaItemOfferedURL" select="concat(aspdnsf:GetCurrentProtocol(), '://schema.org/itemOffered')"/>
        <xsl:variable name="stockStatusText" select="aspdnsf:GetStockStatusText(ProductID, VariantID, 'Product')" />
        <xsl:variable name="GTINValue" select="aspdnsf:ValidateGTIN(GTIN)" />
        <xsl:variable name="pImageLarge" select="aspdnsf:ProductImageUrl(ProductID, ImageFileNameOverride, $pSKU, 'large', 1)"/>
        <xsl:variable name="productConditionText" select="aspdnsf:RetrieveProductConditionText(Condition)" />
        <xsl:variable name="mpn" select="concat(ManufacturerPartNumber, VariantManufacturerPartNumber)" />
        <xsl:variable name="productId" select="ProductID" />
        <xsl:variable name="fullSku" select="concat($pSKU, skusuffix)" />
        <xsl:variable name="dimensionUnits" select="aspdnsf:ToLower(aspdnsf:AppConfig('Localization.DimensionUnits'))" />
        <xsl:variable name="weightUnits" select="aspdnsf:ToLower(aspdnsf:AppConfig('Localization.WeightUnits'))" />
        <xsl:variable name="showVariantImage" select="aspdnsf:AppConfig('Show.Variant.Image')" />
        <xsl:variable name="showimageclass">
        <xsl:choose>
          <xsl:when test="$showVariantImage = 'true'">
            <xsl:text>col-md-7</xsl:text>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>col-md-9</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        </xsl:variable>
        <div class="responsive-variant-list">
          <xsl:if test="$showVariantImage = 'true'">
            <div class="col-md-2">
              <div class="variant-image-wrap grid-item-image-wrap">
                  <xsl:value-of select="aspdnsf:LookupVariantImage(ProductID, VariantID, ImageFilenameOverride, $pSKU, 'icon', 0, $AltText)" disable-output-escaping="yes" />
              </div>
            </div>
          </xsl:if>
          <div class="{$showimageclass}">
          <div class="variant-name-wrap grid-item-name-wrap">
            <xsl:choose>
              <xsl:when test="$ShowFullNameInRightBar='true'">
                <h3>
                  <xsl:value-of select="aspdnsf:Decode($pName)" disable-output-escaping="yes"/>
                  <xsl:if test="$vName!=''">
                    -<xsl:value-of select="aspdnsf:Decode($vName)" disable-output-escaping="yes" />
                  </xsl:if>
                </h3>
              </xsl:when>
              <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="$vName=''">
                    <h3>
                      <xsl:value-of select="aspdnsf:Decode($pName)" disable-output-escaping="yes"/>
                    </h3>
                  </xsl:when>
                  <xsl:otherwise>
                    <h3>
                      <xsl:value-of select="aspdnsf:Decode($vName)" disable-output-escaping="yes"/>
                    </h3>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>

            <div class="variant-sku-wrap grid-item-sku-wrap">
              <xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.21', $LocaleSetting)" disable-output-escaping="yes" />
              <xsl:value-of select="concat($pSKU, skusuffix)" />
            </div>

            <!--<div class="variant-weight-wrap grid-item-weight-wrap">
              <xsl:if test="Weight!=''">
                <xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.24', $LocaleSetting)" disable-output-escaping="yes" />
                <xsl:value-of select="aspdnsf:FormatDecimal(Weight, 2)" />
              </xsl:if>
            </div>-->

          </div>
          </div>
          <div class="col-md-3">
            <div id="OrderStatus">
              <xsl:choose>
                <!--  Showing of inventory table also goes through the rules of DisplayOutOfStock appconfig if enabled..-->
                <xsl:when test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
                  <xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID, VariantID)" disable-output-escaping="yes" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
                    <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID, 'Product')" disable-output-escaping="yes" />
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </div>
            <div class="variant-price-wrap grid-item-price-wrap" itemprop="offers" itemscope="" itemtype="{$schemaOfferURL}">
              <xsl:if test="number(CustomerEntersPrice)=0">
                <span>
                  <xsl:attribute name="id">
                    VariantPrice_<xsl:value-of select="VariantID"/>
                  </xsl:attribute>
                  <span itemprop="itemOffered" itemscope="" itemtype="{$schemaItemOfferedURL}">
                    <xsl:if test="string-length(Weight) &gt; 0 and string-length($weightUnits) &gt; 0">
                      <xsl:variable name="pWeight" select="aspdnsf:ValidateWeight(Weight)" />
                      <xsl:if test="string-length($pWeight) &gt; 0">
                        <meta itemprop="weight" content="{concat(aspdnsf:FormatDecimal($pWeight, '2'), ' ', $weightUnits)}"/>
                      </xsl:if>
                    </xsl:if>
                    <xsl:if test="string-length($fullSku) &gt; 0">
                      <meta itemprop="sku" content="{$fullSku}"/>
                    </xsl:if>
                    <xsl:if test="$productId &gt; 0">
                      <meta itemprop="productID" content="{$productId}"/>
                    </xsl:if>
                    <xsl:if test="((string-length($vName) &gt; 0) and (string-length($pName) &gt; 0))">
                      <meta itemprop="name" content="{$fullName}"/>
                    </xsl:if>
                    <xsl:if test="string-length($vDescription) &gt; 0">
                      <meta itemprop="description" content="{$vDescription}"/>
                    </xsl:if>
                    <xsl:if test="string-length($mpn) &gt; 0">
                      <meta itemprop="mpn" content="{$mpn}"/>
                    </xsl:if>
                    <xsl:if test="string-length($productConditionText) &gt; 0">
                      <link itemprop="itemCondition" href="{concat(aspdnsf:GetCurrentProtocol(), '://schema.org/', concat($productConditionText, 'Condition'))}" content="{aspdnsf:ToLower($productConditionText)}"/>
                    </xsl:if>
                    <xsl:if test="((string-length($pImageLarge) &gt; 0) and (contains(substring-after($pImageLarge, 'images/'),'.')) and (not(contains($pImageLarge, 'nopicture.gif'))) and (not(contains($pImageLarge, 'nopictureicon.gif'))))">
                      <!--This is necessary to escape ampersands in watermaked urls-->
                      <xsl:variable name="BeginningImageMetaTag">
                        <xsl:text>&lt;meta itemprop="image" content="</xsl:text>
                      </xsl:variable>
                      <xsl:variable name="EndImageMetaTag">
                        <xsl:text>" /&gt;</xsl:text>
                      </xsl:variable>
                      <xsl:value-of select="$BeginningImageMetaTag" disable-output-escaping="yes" />
                      <xsl:value-of select="$pImageLarge" disable-output-escaping="yes" />
                      <xsl:value-of select="$EndImageMetaTag" disable-output-escaping="yes" />
                    </xsl:if>
                    <xsl:if test="string-length($GTINValue) &gt; 0">
                      <meta itemprop="{substring-before($GTINValue, '|')}" content="{substring-after($GTINValue, '|')}"/>
                    </xsl:if>
                    <xsl:if test="string-length(Dimensions) &gt; 0 and string-length($dimensionUnits) &gt; 0">
                      <xsl:variable name="pWidth" select="aspdnsf:RetrieveDimension(Dimensions, 'width')" />
                      <xsl:if test="string-length($pWidth) &gt; 0">
                        <meta itemprop="width" content="{concat($pWidth, ' ', $dimensionUnits)}"/>
                      </xsl:if>
                      <xsl:variable name="pHeight" select="aspdnsf:RetrieveDimension(Dimensions, 'height')" />
                      <xsl:if test="string-length($pHeight) &gt; 0">
                        <meta itemprop="height" content="{concat($pHeight, ' ', $dimensionUnits)}"/>
                      </xsl:if>
                      <xsl:variable name="pDepth" select="aspdnsf:RetrieveDimension(Dimensions, 'depth')" />
                      <xsl:if test="string-length($pDepth) &gt; 0">
                        <meta itemprop="depth" content="{concat($pDepth, ' ', $dimensionUnits)}"/>
                      </xsl:if>
                    </xsl:if>
                  </span>
                  <xsl:if test="string-length($stockStatusText) &gt; 0">
                    <link itemprop="availability" href="{concat(aspdnsf:GetCurrentProtocol(), '://schema.org/', substring-before($stockStatusText, '|'))}" content="{substring-after($stockStatusText, '|')}"/>
                  </xsl:if>
                  <xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, TaxClassID)" disable-output-escaping="yes" />
                </span>
              </xsl:if>
            </div>
            <div class="variant-list-add-to-cart-form">
              <xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, VariantID, 0, 'right')" disable-output-escaping="yes" />
            </div>
          </div>
          <div class="clearfix"></div>
              <xsl:if test="$vDescription!=''">

                <div class="variant-list-description-wrap grid-item-description-wrap">
                    <xsl:value-of select="$vDescription" disable-output-escaping="yes" />
                  <div class="clearfix"></div>
                </div>
              
              </xsl:if>
          <div class="clearfix"></div>
        </div>
      </xsl:template>
			
			<xsl:template match="Promotion">
				<div class="promotion-call-to-action">
					<xsl:value-of select="CallToAction" disable-output-escaping="yes" />
				</div>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
