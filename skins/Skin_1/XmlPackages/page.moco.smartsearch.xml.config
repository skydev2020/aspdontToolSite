<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="Search" debug="false" includeentityhelper="false">
  <webquery name="searchresults" RetType="xml" timeout="30">
    <url><![CDATA[{SmartSearch}?searchString={searchString}&sortField={sortField}&pageNumber={pageNumber}&pageSize={pageSize}&facetQuery=StoreId:{StoreID}&facetgroup.mincount=1&facetGroup=CategoryKey&facetGroup=ManufacturerKey&facetGroup=PriceRange&facetQuery={facet}&ContentType=Product]]></url>
    <querystringreplace replaceTag="{SmartSearch}" replacetype="appconfig" replaceparamname="SmartSearchURL" defvalue="" validationpattern="" />
    <querystringreplace replaceTag="{searchString}" replacetype="runtime" replaceparamname="SearchTerm" defvalue="" validationpattern="" />
    <querystringreplace replaceTag="{StoreID}" replacetype="runtime" replaceparamname="StoreId" defvalue="1" validationpattern="" />
    <querystringreplace replaceTag="{sortField}" replacetype="request" replaceparamname="sortField" defvalue="" validationpattern="" />
    <querystringreplace replaceTag="{pageNumber}" replacetype="request" replaceparamname="pageNumber" defvalue="1" validationpattern="" />
    <querystringreplace replaceTag="{pageSize}" replacetype="request" replaceparamname="pageSize" defvalue="16" validationpattern="" />
    <querystringreplace replaceTag="{facet}" replacetype="request" replaceparamname="facet" defvalue="" validationpattern="" />
  </webquery>
  <PackageTransform>
    <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
      <xsl:output method="html" omit-xml-declaration="yes" />
      <xsl:param name="Runtime" select="/root/Runtime" />
      <xsl:param name="System" select="/root/System" />
      <xsl:param name="QueryString" select="/root/QueryString" />
      <xsl:param name="SearchResults" select="/root/searchresults/hits" />
      <xsl:param name="LocaleSetting" select="$Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="$Runtime/WebConfigLocaleSetting" />
      <xsl:param name="ViewAllProdPm" select="$QueryString/viewallproducts" />
      <xsl:param name="ShowAddToCartOnGrid" select="aspdnsf:AppConfig('ShowAddToCartOnGrid')" />
      <xsl:param name="ViewAllArtPm" select="$QueryString/viewallarticles" />
      <xsl:param name="EntityID" select="$Runtime/EntityID" />
      <xsl:param name="EntityName" select="$Runtime/EntityName" />
      <xsl:param name="CurrentFacet" select="$QueryString/facet" />
      <xsl:param name="fg" select="$SearchResults/facetgroups/facetgroup[facet/count &gt; 0][@structured = 'true']" />
      <xsl:param name="fq" select="$SearchResults/facetqueries/facetquery[field != 'ContentType']" />
      <xsl:param name="searchTerm">
        <xsl:choose>
          <xsl:when test="$Runtime/SearchTerm and contains($Runtime/SearchTerm, '%26')">
            <xsl:value-of select="translate($Runtime/SearchTerm, &quot;%26&quot;, &quot;&quot;)" />
          </xsl:when>
          <xsl:when test="$Runtime/SearchTerm">
            <xsl:value-of select="$Runtime/SearchTerm" />
          </xsl:when>
          <xsl:when test="$QueryString/searchterm and contains($QueryString/searchterm, '%26')">
            <xsl:value-of select="translate($QueryString/searchterm, &quot;%26&quot;, &quot;&quot;)" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$QueryString/searchterm" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="pageBase">
        <xsl:choose>
          <xsl:when test="$searchTerm != ''">
            <xsl:value-of select="concat($System/RequestedPage, '?SearchTerm=', $searchTerm)" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($System/RequestedPage,'?')" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="PageCount">
        <xsl:choose>
          <xsl:when test="boolean($SearchResults/pagecount)">
            <xsl:value-of select="$SearchResults/pagecount" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="number(1)" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="pageNumber">
        <xsl:choose>
          <xsl:when test="$SearchResults/page/text()">
            <xsl:value-of select="$SearchResults/page" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="number(1)" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="productIDList">
        <xsl:for-each select="$SearchResults/hit/document/ProductID">
          <xsl:value-of select="." />
          <xsl:text>, </xsl:text>
        </xsl:for-each>
      </xsl:param>
      <xsl:param name="DefaultItemsPerPage" select="number(16)" />
      <xsl:param name="ItemsPerPage">
        <xsl:choose>
          <xsl:when test="boolean($SearchResults/pagesize) and $SearchResults/pagesize != $DefaultItemsPerPage">
            <xsl:value-of select="$SearchResults/pagesize" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="''" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="DefaultSortField" select="string('Relevance')" />
      <xsl:param name="SortField">
        <xsl:choose>
          <xsl:when test="boolean($QueryString/sortfield) and $QueryString/sortfield != $DefaultSortField">
            <xsl:value-of select="$QueryString/sortfield" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="''" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="productRecordCount" select="$SearchResults/count" />
      <xsl:param name="recordsPerPage" select="$ItemsPerPage" />
      <xsl:param name="StringResource_HideBuyButton">
        <xsl:variable name="_sr" select="aspdnsf:StringResource('search.aspx.1000', $LocaleSetting)" />
        <xsl:choose>
          <xsl:when test="$_sr != 'search.aspx.1000'">
            <xsl:value-of select="$_sr" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>Not Available</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="StringResource_HidePriceUntilCart">
        <xsl:variable name="_sr" select="aspdnsf:StringResource('search.aspx.1001', $LocaleSetting)" />
        <xsl:choose>
          <xsl:when test="$_sr != 'search.aspx.1001'">
            <xsl:value-of select="$_sr" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="string('$ See Price In Cart')" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="number-format" select="string('#,##0.00')" />
      <xsl:param name="SkinID" select="/root/System/SkinID" />
      <xsl:variable name="StoreUrl" select="string('/')" />
      <xsl:template match="/">
				<div id="productContent">
            <xsl:value-of select="aspdnsf:Topic('SearchPageHeader')" disable-output-escaping="yes" />
            <span class="searchPageHeader">
              <xsl:value-of select="$QueryString/errormsg" />
            </span>
            <div class="search-results">
              <xsl:if test="boolean($searchTerm and count(/root/Categories/Category)=0 and count(/root/Sections/Section)=0 and count(/root/Manufacturers/Manufacturer)=0 and $productRecordCount=0 or $searchTerm = '') = false">
                <xsl:value-of select="$productRecordCount" />
                <xsl:choose>
                  <xsl:when test="$productRecordCount &gt; 1">
                    <xsl:value-of select="' products matching: '" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="' product matching: '" />
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:value-of select="$searchTerm" />
                <xsl:value-of select="'  '" />
              </xsl:if>
            </div>
            <xsl:if test="$SearchResults/pagecount &gt; 1">
              <div class="entity-paging-wrap paging-wrap-top">
                <xsl:call-template name="Pagination">
                  <xsl:with-param name="PageBase" select="$pageBase" />
                  <xsl:with-param name="PageNumber" select="$pageNumber" />
                  <xsl:with-param name="PageCount" select="$PageCount" />
                  <xsl:with-param name="RecordCount" select="$SearchResults/count" />
                  <xsl:with-param name="RecordsPerPage" select="$ItemsPerPage" />
                  <xsl:with-param name="SortField" select="$SortField" />
                  <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
                </xsl:call-template>
              </div>
            </xsl:if>
            <xsl:if test="aspdnsf:AppConfigBool('Search_ShowProductsInResults')='true' and $productRecordCount &gt;0">
              <xsl:if test="string-length($ViewAllArtPm) = 0 and string-length($ViewAllProdPm) = 0 ">
                <div class="entity-paging-wrap" style="height:100px">
                  <xsl:call-template name="PageSortAndSizeControls">
                    <xsl:with-param name="PageBase" select="$pageBase" />
                    <xsl:with-param name="RecordCount" select="$SearchResults/count" />
                    <xsl:with-param name="RecordsPerPage" select="$ItemsPerPage" />
                    <xsl:with-param name="DefaultRecordsPerPage" select="$DefaultItemsPerPage" />
                    <xsl:with-param name="SortField" select="$SortField" />
                    <xsl:with-param name="DefaultSortField" select="$DefaultSortField" />
                    <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
                  </xsl:call-template>
                </div>
							<div style="clear:both" />
							<div class="entity-page-products">
                  <div class="row entity-page-product-row">
                    <xsl:apply-templates select="$SearchResults/hit/document" mode="product">
                      <xsl:with-param name="EntityID" select="$EntityID" />
                      <xsl:with-param name="EntityName" select="$EntityName" />
                    </xsl:apply-templates>
                  </div>
                </div>
              </xsl:if>
              <xsl:if test="string-length($ViewAllProdPm) &gt; 0">
                <xsl:apply-templates select="$SearchResults/hit/document" mode="product">
                  <xsl:with-param name="EntityID" select="$EntityID" />
                  <xsl:with-param name="EntityName" select="$EntityName" />
                </xsl:apply-templates>
              </xsl:if>
              <xsl:if test="string-length($ViewAllArtPm) &gt; 0">
                <div align="center" class="backToResults">
                  <a>
                    <xsl:attribute name="href">
                      <xsl:value-of select="concat($pageBase,'&amp;viewallproducts=true')" />
                    </xsl:attribute>
									&lt;&lt; Back to product search results
								</a>
                </div>
              </xsl:if>
            </xsl:if>
            <xsl:if test="$QueryString/aspxerrorpath">
              <p>
                <xsl:value-of select="aspdnsf:Topic('404Error')" disable-output-escaping="yes" />
              </p>
            </xsl:if>
            <!-- No Search Results Found -->
            <xsl:if test="$searchTerm and count(/root/Categories/Category)=0 and count(/root/Sections/Section)=0 and count(/root/Manufacturers/Manufacturer)=0 and $productRecordCount=0 or $searchTerm = ''">
              <xsl:if test="$SearchResults/suggest[correction != original]">
                <xsl:value-of select="aspdnsf:Topic('EmptySearchResult')" disable-output-escaping="yes" />
                <p>
                  <span class="noResults">
									Did you Mean:
									<xsl:element name="a"><xsl:attribute name="href"><xsl:apply-templates select="$SearchResults/suggest" mode="suggestions"><xsl:with-param name="seperator" select="'+'" /></xsl:apply-templates></xsl:attribute><xsl:apply-templates select="$SearchResults/suggest" mode="suggestions"><xsl:with-param name="seperator" select="' '" /></xsl:apply-templates></xsl:element></span>
                </p>
              </xsl:if>
              <xsl:value-of select="aspdnsf:StringResource('search.aspx.9', $LocaleSetting)" disable-output-escaping="yes" />
            </xsl:if>
            <xsl:if test="$PageCount &gt; 1">
              <div class="entity-paging-wrap paging-wrap-top">
                <xsl:call-template name="Pagination">
                  <xsl:with-param name="PageBase" select="$pageBase" />
                  <xsl:with-param name="PageCount" select="$PageCount" />
                  <xsl:with-param name="PageNumber" select="$pageNumber" />
                  <xsl:with-param name="RecordCount" select="$SearchResults/count" />
                  <xsl:with-param name="RecordsPerPage" select="$ItemsPerPage" />
                  <xsl:with-param name="SortField" select="$SortField" />
                  <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
                </xsl:call-template>
              </div>
            </xsl:if>
            <xsl:if test="string-length($ViewAllArtPm) &gt; 0">
              <div align="center" class="backToResults">
                <a>
                  <xsl:attribute name="href">
                    <xsl:value-of select="concat($pageBase,'&amp;viewallproducts=true')" />
                  </xsl:attribute>
								&lt;&lt; Back to product search results
							</a>
              </div>
            </xsl:if>
          </div>
      </xsl:template>
      <xsl:template match="suggest" mode="suggestions">
        <xsl:param name="seperator" />
        <xsl:choose>
          <xsl:when test="position()=1 and $seperator = '+'">
            <xsl:value-of select="concat($System/RequestedPage, '?SearchTerm=', concat(correction, $seperator))" />
          </xsl:when>
          <xsl:when test="position()!=last()">
            <xsl:value-of select="concat(correction, $seperator)" disable-output-escaping="yes" />
          </xsl:when>
          <xsl:when test="position()=last()">
            <xsl:value-of select="correction" disable-output-escaping="yes" />
          </xsl:when>
        </xsl:choose>
      </xsl:template>
	  
      <!-- Product Listing -->
      <xsl:template match="document" mode="product">
        <xsl:param name="EntityID" />
        <xsl:param name="EntityName" />
        <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
        <xsl:param name="pSEAltText" select="aspdnsf:GetMLValue(Name)"></xsl:param>
        <xsl:param name="variantCount" select="count(Variants/Variant)" />
        <xsl:param name="hasSizeColor">
          <xsl:choose>
            <xsl:when test="contains(Variants/Variant/Sizes, ',') or contains(Variants/Variant/Colors, ',')">
              <xsl:value-of select="'true'" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'false'" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        <xsl:param name="AltText">
          <xsl:choose>
            <xsl:when test="$pSEAltText=''">
              <xsl:value-of select="$pName" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$pSEAltText" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        <xsl:param name="number-format" select="string('#,##0.00')" />
        <xsl:param name="defaultProductVariant" select="Variants/Variant[IsDefault=1 or position()=1]" />
        <xsl:variable name="SalePrice" select="SalePrice" />
        <xsl:variable name="Price" select="Price" />
        <xsl:variable name="ProductLink" select="aspdnsf:ProductandEntityLink(ProductID, SEName, $EntityID, $EntityName, 0)" />
        <xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', 'icon', 0)" />
        <xsl:variable name="our-price">
          <xsl:choose>
            <xsl:when test="$SalePrice &gt; 0">
              <xsl:value-of select="$SalePrice" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$Price" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="list-price">
          <xsl:choose>
            <xsl:when test="$Price &gt; $our-price">
              <xsl:value-of select="$Price" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$our-price" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <!-- Start a new row if this one is full -->
        <xsl:if test="position() mod 4 = 1 and position() &gt; 1">
          <xsl:variable name="NewRowHtml">
            <xsl:text>&lt;/div&gt;&lt;div class="row  entity-page-product-row"&gt;</xsl:text>
          </xsl:variable>
          <xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
        </xsl:if>
        <div class="entity-page-product grid-item col-xs-6 col-sm-3">
          <div class="entity-product-image-wrap grid-item-image-wrap">
            <a href="{$ProductLink}">
              <img src="{$ImageUrl}" alt="{$AltText}" class="img-thumbnail img-responsive entity-product-image grid-item-image" />
            </a>
          </div>
          <div class="entity-product-name-wrap grid-item-name-wrap">
            <a href="{$ProductLink}">
              <xsl:value-of select="Name" disable-output-escaping="yes" />
            </a>
          </div>
          <div class="entity-product-price-wrap grid-item-price-wrap price">
            <xsl:if test="number($list-price) &gt; 0 and number($list-price) &gt; number($our-price)">
              <div class="price regular-price">
                <xsl:text>$</xsl:text>
                <xsl:value-of select="format-number($list-price, $number-format)" />
              </div>
            </xsl:if>
            <div>
              <xsl:attribute name="class">
                <xsl:choose>
                  <xsl:when test="number($list-price) &gt; 0 and number($list-price) &gt; number($our-price)">
                    <xsl:value-of select="'price sale-price'" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'price regular-price'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:text>$</xsl:text>
              <xsl:value-of select="format-number($our-price, $number-format)" />
            </div>
          </div>
          <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
            <div class="entity-product-stock-wrap">
              <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Entity')" disable-output-escaping="yes" />
            </div>
          </xsl:if>
        </div>
      </xsl:template>
      
      <!-- Pagination -->
      <xsl:template name="PageSortAndSizeControls">
        <xsl:param name="PageBase" />
        <xsl:param name="RecordCount" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="DefaultRecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="DefaultSortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:param name="pageSize">
          <xsl:choose>
            <xsl:when test="$RecordsPerPage != '' and $RecordsPerPage != $DefaultRecordsPerPage">
              <xsl:value-of select="$RecordsPerPage" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$DefaultRecordsPerPage" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        <xsl:param name="pageSort">
          <xsl:choose>
            <xsl:when test="$SortField != '' and $SortField != $DefaultSortField">
              <xsl:value-of select="$SortField" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$DefaultSortField" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        <script type="text/javascript"><![CDATA[
				function refreshPage(pagebase, currentFacet) {
					if(pagebase.indexOf('?') === -1) {
						if(currentFacet == '') {
							window.location = pagebase + '?sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val();
						} else {
								window.location = pagebase + '?sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&facet=' + currentFacet;
						}
					} else {
						if(currentFacet == '') {
							window.location = pagebase + '&sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val();
						} else {
							window.location = pagebase + '&sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&facet=' + currentFacet;
						}
					}
				}
			]]></script>
        <xsl:if test="number($RecordCount) &gt; 0">
          <div class="page-sort col-md-6 col-sm-6 col-xs-16">
            <label>Sort By</label>
            <select id="sortField" onchange="refreshPage('{$PageBase}', '{$CurrentFacet}')" class="form-control">
              <option value="{$pageSort}">
                <xsl:value-of select="$pageSort" />
              </option>
              <option value="">---------------</option>
              <option value="Relevance">Relevance</option>
              <option value="Highest Rated">Highest Rated</option>
              <option value="Best Sellers">Best Sellers</option>
              <option value="New Arrivals">New Arrivals</option>
              <option value="Lowest Price">Lowest Price</option>
              <option value="Highest Price">Highest Price</option>
              <option value="Name A-Z">Name A-Z</option>
              <option value="Name Z-A">Name Z-A</option>
            </select>
          </div>
          <div class="page-size col-md-6 col-sm-6 col-xs-16">
            <label>Items per Page</label>
            <select id="itemsPerPage" onchange="refreshPage('{$PageBase}', '{$CurrentFacet}')" class="form-control">
              <option value="{$pageSize}">
                <xsl:value-of select="$pageSize" />
              </option>
              <option value="16">16</option>
              <option value="24">24</option>
              <option value="32">32</option>
            </select>
          </div>
        </xsl:if>
      </xsl:template>
      <xsl:template name="Pagination">
        <xsl:param name="PageBase" />
        <xsl:param name="PageNumber" />
        <xsl:param name="PageCount" />
        <xsl:param name="RecordCount" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:variable name="firstCharacter">
          <xsl:choose>
            <xsl:when test="contains($PageBase, '?')">
              <xsl:value-of select="'&amp;'" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'?'" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="NumberOfPagingBlocks" select="aspdnsf:AppConfig('moco.smartsearch.pagination.NumberOfPagingBlocks')" />
        <xsl:variable name="HalfNumberOfPagingBlocks">
          <xsl:choose>
            <xsl:when test="$NumberOfPagingBlocks != '' and number($NumberOfPagingBlocks) &gt; 0">
              <xsl:value-of select="ceiling(number($NumberOfPagingBlocks) div number(2))" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number(2)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="StartingPageNumber">
          <xsl:choose>
            <xsl:when test="(number($PageNumber) &gt; number($HalfNumberOfPagingBlocks))">
              <xsl:value-of select="number($PageNumber) - number($HalfNumberOfPagingBlocks)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number(1)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="EndingPageNumber">
          <xsl:choose>
            <xsl:when test="(number($PageNumber) + number($HalfNumberOfPagingBlocks)) &lt; number($PageCount)">
              <xsl:value-of select="number($PageNumber) + number($HalfNumberOfPagingBlocks)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($PageCount)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:if test="number($PageCount) &gt; 1">
          <ul class="pagination">
            <xsl:call-template name="PreviousPagelink">
              <xsl:with-param name="i" select="number(1)" />
              <xsl:with-param name="PageCount" select="$PageCount" />
              <xsl:with-param name="PageBase" select="$PageBase" />
              <xsl:with-param name="FirstCharacter" select="$firstCharacter" />
              <xsl:with-param name="PageNumber" select="$PageNumber" />
              <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
              <xsl:with-param name="SortField" select="$SortField" />
              <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
            </xsl:call-template>
            <xsl:if test="number($StartingPageNumber) != number(1)">
              <xsl:call-template name="PageNumberLinks">
                <xsl:with-param name="i" select="number(1)" />
                <xsl:with-param name="PageCount" select="number(1)" />
                <xsl:with-param name="PageBase" select="$PageBase" />
                <xsl:with-param name="FirstCharacter" select="$firstCharacter" />
                <xsl:with-param name="PageNumber" select="$PageNumber" />
                <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
                <xsl:with-param name="SortField" select="$SortField" />
                <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
              </xsl:call-template>
              <li class="paging-ellipses">
                <span>
                  <xsl:text>&#x2026;</xsl:text>
                </span>
              </li>
            </xsl:if>
            <xsl:call-template name="PageNumberLinks">
              <xsl:with-param name="i" select="$StartingPageNumber" />
              <xsl:with-param name="PageCount" select="$EndingPageNumber" />
              <xsl:with-param name="PageBase" select="$PageBase" />
              <xsl:with-param name="FirstCharacter" select="$firstCharacter" />
              <xsl:with-param name="PageNumber" select="$PageNumber" />
              <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
              <xsl:with-param name="SortField" select="$SortField" />
              <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
            </xsl:call-template>
            <xsl:if test="number($EndingPageNumber) != number($PageCount)">
              <li class="paging-ellipses">
                <span>
                  <xsl:text>&#x2026;</xsl:text>
                </span>
              </li>
              <xsl:call-template name="PageNumberLinks">
                <xsl:with-param name="i" select="$PageCount" />
                <xsl:with-param name="PageCount" select="$PageCount" />
                <xsl:with-param name="PageBase" select="$PageBase" />
                <xsl:with-param name="FirstCharacter" select="$firstCharacter" />
                <xsl:with-param name="PageNumber" select="$PageNumber" />
                <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
                <xsl:with-param name="SortField" select="$SortField" />
                <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
              </xsl:call-template>
            </xsl:if>
            <xsl:call-template name="NextPagelink">
              <xsl:with-param name="i" select="number(1)" />
              <xsl:with-param name="PageCount" select="$PageCount" />
              <xsl:with-param name="PageBase" select="$PageBase" />
              <xsl:with-param name="FirstCharacter" select="$firstCharacter" />
              <xsl:with-param name="PageNumber" select="$PageNumber" />
              <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
              <xsl:with-param name="SortField" select="$SortField" />
              <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
            </xsl:call-template>
          </ul>
        </xsl:if>
      </xsl:template>
      <xsl:template name="PageNumberLinks">
        <xsl:param name="i" />
        <xsl:param name="PageCount" />
        <xsl:param name="PageBase" />
        <xsl:param name="FirstCharacter" />
        <xsl:param name="PageNumber" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:element name="li">
          <xsl:attribute name="class">
            <xsl:choose>
              <xsl:when test="number($i) = number($PageNumber)">
                <xsl:text>page-link active</xsl:text>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>page-link</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:call-template name="Pagelink">
            <xsl:with-param name="i" select="number($i)" />
            <xsl:with-param name="PageCount" select="$PageCount" />
            <xsl:with-param name="PageBase" select="$PageBase" />
            <xsl:with-param name="FirstCharacter" select="$FirstCharacter" />
            <xsl:with-param name="PageNumber" select="$PageNumber" />
            <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
            <xsl:with-param name="SortField" select="$SortField" />
            <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
            <xsl:with-param name="LinkText" select="$i" />
          </xsl:call-template>
        </xsl:element>
        <xsl:if test="$i &lt; $PageCount">
          <xsl:call-template name="PageNumberLinks">
            <xsl:with-param name="i" select="$i + 1" />
            <xsl:with-param name="PageCount" select="$PageCount" />
            <xsl:with-param name="PageBase" select="$PageBase" />
            <xsl:with-param name="FirstCharacter" select="$FirstCharacter" />
            <xsl:with-param name="PageNumber" select="$PageNumber" />
            <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
            <xsl:with-param name="SortField" select="$SortField" />
            <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template name="PreviousPagelink">
        <xsl:param name="i" />
        <xsl:param name="PageCount" />
        <xsl:param name="PageBase" />
        <xsl:param name="FirstCharacter" />
        <xsl:param name="PageNumber" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:param name="LinkText" select="'&#171;'" />
        <xsl:element name="li">
          <xsl:choose>
            <xsl:when test="number($PageNumber) &gt; 1">
              <xsl:attribute name="class">
                <xsl:text>pager-back</xsl:text>
              </xsl:attribute>
              <xsl:call-template name="Pagelink">
                <xsl:with-param name="i" select="$PageNumber - 1" />
                <xsl:with-param name="PageCount" select="$PageCount" />
                <xsl:with-param name="PageBase" select="$PageBase" />
                <xsl:with-param name="FirstCharacter" select="$FirstCharacter" />
                <xsl:with-param name="PageNumber" select="$PageNumber" />
                <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
                <xsl:with-param name="SortField" select="$SortField" />
                <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
                <xsl:with-param name="LinkText" select="$LinkText" />
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
              <xsl:attribute name="class">
                <xsl:text>page-between</xsl:text>
              </xsl:attribute>
              <span class="disabled">
                <xsl:value-of select="$LinkText" />
              </span>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:element>
      </xsl:template>
      <xsl:template name="NextPagelink">
        <xsl:param name="i" />
        <xsl:param name="PageCount" />
        <xsl:param name="PageBase" />
        <xsl:param name="FirstCharacter" />
        <xsl:param name="PageNumber" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:param name="LinkText" select="'&#187;'" />
        <xsl:element name="li">
          <xsl:choose>
            <xsl:when test="number($PageNumber) &lt; $PageCount">
              <xsl:attribute name="class">
                <xsl:text>pager-forward</xsl:text>
              </xsl:attribute>
              <xsl:call-template name="Pagelink">
                <xsl:with-param name="i" select="$PageNumber + 1" />
                <xsl:with-param name="PageCount" select="$PageCount" />
                <xsl:with-param name="PageBase" select="$PageBase" />
                <xsl:with-param name="FirstCharacter" select="$FirstCharacter" />
                <xsl:with-param name="PageNumber" select="$PageNumber" />
                <xsl:with-param name="RecordsPerPage" select="$RecordsPerPage" />
                <xsl:with-param name="SortField" select="$SortField" />
                <xsl:with-param name="CurrentFacet" select="$CurrentFacet" />
                <xsl:with-param name="LinkText" select="$LinkText" />
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
              <xsl:attribute name="class">
                <xsl:text>page-between</xsl:text>
              </xsl:attribute>
              <span class="disabled">
                <xsl:value-of select="$LinkText" />
              </span>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:element>
      </xsl:template>
      <xsl:template name="Pagelink">
        <xsl:param name="i" />
        <xsl:param name="PageCount" />
        <xsl:param name="PageBase" />
        <xsl:param name="FirstCharacter" />
        <xsl:param name="PageNumber" />
        <xsl:param name="RecordsPerPage" />
        <xsl:param name="SortField" />
        <xsl:param name="CurrentFacet" />
        <xsl:param name="LinkText" />
        <xsl:element name="a">
          <xsl:attribute name="href">
            <xsl:value-of select="$PageBase" />
            <xsl:if test="number($i) != number(1)">
              <xsl:value-of select="$FirstCharacter" />
              <xsl:text>pageNumber=</xsl:text>
              <xsl:value-of select="$i" />
            </xsl:if>
            <xsl:if test="$RecordsPerPage != ''">
              <xsl:choose>
                <xsl:when test="number($i) = number(1)">
                  <xsl:value-of select="$FirstCharacter" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>&amp;</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:text>pageSize=</xsl:text>
              <xsl:value-of select="$RecordsPerPage" />
            </xsl:if>
            <xsl:if test="$SortField != ''">
              <xsl:choose>
                <xsl:when test="number($i) = number(1) and $RecordsPerPage = ''">
                  <xsl:value-of select="$FirstCharacter" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>&amp;</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:text>sortField=</xsl:text>
              <xsl:value-of select="$SortField" />
            </xsl:if>
            <xsl:if test="$CurrentFacet != ''">
              <xsl:choose>
                <xsl:when test="($PageNumber = '' or number($PageNumber) = number(1)) and $RecordsPerPage = '' and $SortField = ''">
                  <xsl:value-of select="$FirstCharacter" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>&amp;</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:text>facet=</xsl:text>
              <xsl:value-of select="$CurrentFacet" />
            </xsl:if>
          </xsl:attribute>
          <xsl:value-of select="$LinkText" />
        </xsl:element>
      </xsl:template>
    </xsl:stylesheet>
  </PackageTransform>
</package>